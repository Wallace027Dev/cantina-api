generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  VENDOR
}

// Representa quem usa o sistema: administrador ou vendedor.
model User {
  id        String    @id @default(uuid())
  name      String
  password  String
  role      Role      @default(VENDOR)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  sales     Sale[]
}

// Representa um dos dias da festa.
model EventDay {
  id       String         @id @default(uuid())
  date     DateTime       @unique
  products DailyProduct[]
}

// Produto genérico, independente do dia.
model Product {
  id            String         @id @default(uuid())
  name          String
  price         Decimal
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  deletedAt     DateTime?
  dailyProducts DailyProduct[]
}

// Produto disponível em um dia específico, com quantidade definida.
model DailyProduct {
  id         String    @id @default(uuid())
  product    Product   @relation(fields: [productId], references: [id])
  productId  String
  day        EventDay  @relation(fields: [eventDayId], references: [id])
  eventDayId String
  quantity   Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime?
  sales      Sale[]
  @@unique([productId, eventDayId])
}

// Venda feita por um vendedor, de um DailyProduct.
model Sale {
  id             String       @id @default(uuid())
  userId         String
  dailyProductId String
  quantitySold   Int
  createdAt      DateTime     @default(now())
  user           User         @relation(fields: [userId], references: [id])
  dailyProduct   DailyProduct @relation(fields: [dailyProductId], references: [id])
}
